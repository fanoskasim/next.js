diff --git a/dist/index.node.js b/dist/index.node.js
index ba8d34a963e9314b1790f4b17e280023a55955a3..d91fe8bc26ed3630b37f342e78dcf9d1757f637c 100644
--- a/dist/index.node.js
+++ b/dist/index.node.js
@@ -18508,8 +18508,6 @@ var Resvg2 = class extends Resvg {
 // src/index.node.ts
 import { Readable } from "stream";
 import fs from "fs";
-import { fileURLToPath } from "url";
-import { join } from "path";
 
 // src/emoji/index.ts
 var U200D = String.fromCharCode(8205);
@@ -18924,11 +18922,17 @@ function assertValue(v2, errorMessage) {
   return v2;
 }
 
+// src/platform/node-file-resolver.ts
+import { fileURLToPath } from "url";
+function nodeFileResolver(relativePath) {
+  return fileURLToPath(new URL(relativePath, import.meta.url));
+}
+
 // src/index.node.ts
 var satori = El.default || El;
-var fontData = fs.readFileSync(fileURLToPath(join(import.meta.url, "../noto-sans-v27-latin-regular.ttf")));
-var yoga_wasm = fs.readFileSync(fileURLToPath(join(import.meta.url, "../yoga.wasm")));
-var resvg_wasm = fs.readFileSync(fileURLToPath(join(import.meta.url, "../resvg.wasm")));
+var fontData = fs.readFileSync(nodeFileResolver("../noto-sans-v27-latin-regular.ttf"));
+var yoga_wasm = fs.readFileSync(nodeFileResolver("../yoga.wasm"));
+var resvg_wasm = fs.readFileSync(nodeFileResolver("../resvg.wasm"));
 var initializedResvg = initWasm(resvg_wasm);
 var initializedYoga = initYoga(yoga_wasm).then((yoga2) => Ll(yoga2));
 var ImageResponse = class extends Response {
